DROP TABLE IF EXISTS USERS, ITEMS, BOOKING, BOOKING_STATUS, REQUESTS, COMMENTS,
    booking_booker, booking_item, comments_author, comments_items, item_owner, item_request,
    request_user, status;

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description TEXT,
    created timestamp,
    requestor_id BIGINT REFERENCES users (id),
    CONSTRAINT pk_request PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_name VARCHAR(255) NOT NULL,
    description TEXT,
    available BOOLEAN,
    owner_id BIGINT REFERENCES users (id),
    request_id BIGINT REFERENCES requests (id),
    CONSTRAINT pk_item PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS booking_status (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    status_name VARCHAR(10) NOT NULL,
    CONSTRAINT pk_status PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS booking (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    booking_start timestamp,
    booking_end timestamp,
    item_id BIGINT REFERENCES items (id),
    booker_id BIGINT REFERENCES users (id),
    status varchar(10),
    CONSTRAINT pk_booking PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comment_text TEXT,
    item_id BIGINT REFERENCES items (id),
    author_id BIGINT REFERENCES users (id),
    CONSTRAINT pk_comments PRIMARY KEY (id)
);